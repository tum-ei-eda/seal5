---
name: Build single Seal5 Docker image
on:
  workflow_dispatch:
    inputs:
      seal5-ref:
        description: Seal5 Version/Tag/Branch
        required: true
        default: default
      full:
        description: Also build large quickstart image
        required: true
        type: boolean
        # default: "false"
      base-image:
        description: OS base image
        required: true
        default: ubuntu:20.04
      llvm-ref:
        description: LLVM Version
        required: true
        default: llvmorg-19.1.7
jobs:
  image-deps:
    name: Build minimal seal5-deps image
    runs-on: ubuntu-latest
    steps:
      - name: Set current date as env variable
        run: |
          echo "builddate=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: timestamp
      - name: Set os env variable
        run: |
          echo "os=$(echo '${{ github.event.inputs.base-image }}' | tr ':' '-')" >> $GITHUB_OUTPUT
        id: os
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 32768
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: seal5-deps
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.base-image }}
          cache-to: type=inline
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-deps:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-deps:latest-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}
  image-base:
    name: Build seal5-base image for users
    runs-on: ubuntu-latest
    needs: image-deps
    steps:
      - name: Set current date as env variable
        run: |
          echo "builddate=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: timestamp
      - name: Set os env variable
        run: |
          echo "os=$(echo '${{ github.event.inputs.base-image }}' | tr ':' '-')" >> $GITHUB_OUTPUT
        id: os
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 32768
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: seal5-base
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.base-image }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-deps:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-deps }}-${{ steps.os.outputs.os }}
          cache-to: type=inline
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-base:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-base:latest-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}
  seal5-quickstart:
    name: Build large seal5-quickstart image for benchmarking
    runs-on: ubuntu-latest
    needs: image-base
    # if: ${{ github.event.inputs.full }} == "true"
    # if: github.event.inputs.full
    if: ${{ inputs.full == 'true' || inputs.full }}
    steps:
      - name: Set current date as env variable
        run: |
          echo "builddate=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: timestamp
      - name: Set os env variable
        run: |
          echo "os=$(echo '${{ github.event.inputs.base-image }}' | tr ':' '-')" >> $GITHUB_OUTPUT
        id: os
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 32768
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        if: ${{ github.repository == 'tum-ei-eda/seal5' }}
        with:
          context: .
          file: docker/Dockerfile
          push: true
          target: seal5-quickstart
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.base-image }}
            LLVM_REF=${{ github.event.inputs.llvm-ref }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-deps:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-deps }}-${{ steps.os.outputs.os }}
            type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-base:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}
          cache-to: type=inline
          tags: |-
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-quickstart:${{ steps.timestamp.outputs.builddate }}-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}-${{ github.event.inputs.llvm-ref }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/seal5-quickstart:latest-${{ github.event.inputs.seal5-ref }}-${{ steps.os.outputs.os }}-${{ github.event.inputs.llvm-ref }}
