// import "rv_base/RVC.core_desc"
import "../rv_base/RV32I.core_desc"

InstructionSet XRVC extends RV32I {
    instructions{
        XRV_NAND {
            encoding: 7'b1001001 :: rs2[4:0] :: rs1[4:0] :: 3'b110 :: rd[4:0] :: 7'b0101011;
            assembly: {"xrv.nand", "{name(rd)}, {name(rs1)}, {name(rs2)}"};
            behavior: {
              if(rd != 0) X[rd] = ~(X[rs1] & X[rs2]);
            }
        }
        XRVC_NAND [[compressed="XRV_NAND"]] {
            encoding: 3'b100 :: 1'b1 :: 2'b11 :: rd[2:0] :: 2'b11 :: rs2[2:0] :: 2'b01;
            assembly: {"xrvc.nand", "{name(8+rd)}, {name(8+rs2)}"};
            behavior: {
                X[rd + 8] = ~(X[rd + 8] & X[rs2 + 8]);
            }
        }
        XRV_NANDI {
            encoding: imm[11:0] :: rs1[4:0] :: 3'b111 :: rd[4:0] :: 7'b0001011;
            assembly: {"xrv.nandi", "{name(rd)}, {name(rs1)}, {imm}"};
            behavior: {
              if(rd != 0) X[rd] = ~(X[rs1] & (unsigned<XLEN>)((signed)imm));
            }
        }
        XRVC_NANDI [[compressed="XRV_NANDI"]] {
            encoding: 3'b100 :: imm[5:5] :: 2'b10 :: rd[2:0] :: imm[4:0] :: 2'b00;
            assembly: {"xrvc.nandi", "{name(8+rd)}, {imm:#05x}"};
            behavior: {
                X[rd + 8] = ~(X[rd + 8] & (signed<6>)imm);
            }
        }
    }
}
